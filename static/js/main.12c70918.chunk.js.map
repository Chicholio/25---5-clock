{"version":3,"sources":["Length.js","App.js","index.js"],"names":["H3Length","styled","h3","DivLengthTime","div","ButtonLenght","button","Length","tittle","changeTime","type","time","formatTime","lengthId","increId","decreId","id","onClick","style","width","height","DivPrincipal","DivPLength","DivTime","ButtonPSR","App","useState","dtime","setDTime","btime","setBTime","stime","setSTime","timeOn","setTimeOn","breakOn","setBreakOn","Audio","bAudio","playBSound","currentTime","play","minutes","Math","floor","seconds","cant","oper","fontSize","Date","getTime","nextDate","onBVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c70918.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BiCaretUp, BiCaretDown } from \"react-icons/bi\";\r\n\r\nconst H3Length = styled.h3`\r\n  margin: 0;\r\n`\r\n\r\nconst DivLengthTime = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50px 100px 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ButtonLenght = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  color: gray;\r\n`\r\n\r\nconst Length = ({ tittle, changeTime, type, time, formatTime, lengthId, increId, decreId }) => {\r\n  return (\r\n    <div>\r\n      <H3Length>{tittle}</H3Length>\r\n      <div>\r\n        <DivLengthTime>\r\n          <ButtonLenght id={decreId} onClick={() => changeTime(-60, type)}>\r\n            <BiCaretDown style={{width: '30px', height: '30px'}} />\r\n          </ButtonLenght>\r\n          <h3 id={lengthId}>{formatTime(time)}</h3>\r\n          <ButtonLenght id={increId} onClick={() => changeTime(60, type)}>\r\n            <BiCaretUp style={{width: '30px', height: '30px'}} />\r\n          </ButtonLenght>\r\n        </DivLengthTime>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Length\r\n","import { useState } from \"react\";\nimport Length from \"./Length\";\nimport styled from 'styled-components'\nimport { BiPause, BiPlay, BiReset } from \"react-icons/bi\";\n\nconst DivPrincipal = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 100vh;\n  color: white;\n  background: #282623;\n`\n\nconst DivPLength = styled.div`\n  display: flex;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst DivTime = styled.div`\n  border: solid;\n  border-radius: 20px;\n  width: 200px;\n  margin: 0 0 20px 0;\n  border-color: gray;\n`\n\nconst ButtonPSR = styled.button`\n  border: none;\n  background: transparent;\n  width: 40px;\n  height: 40px;\n`\n\nconst App = () => {\n\n  const [dtime, setDTime] = useState(60 * 25)\n  const [btime, setBTime] = useState(60 * 5)\n  const [stime, setSTime] = useState(60 * 25)\n  const [timeOn, setTimeOn] = useState(false)\n  const [breakOn, setBreakOn] = useState(false)\n  const [bAudio, setBAudio] = useState(new Audio('http://www.sonidosmp3gratis.com/sounds/alarma-good-morning-5-5.mp3'))\n\n  const playBSound = () => {\n    bAudio.currentTime = 0\n    bAudio.play()\n  }\n\n  const formatTime = time => {\n    let minutes = Math.floor(time / 60)\n    let seconds = time % 60\n\n    return (\n      (minutes < 10 ? '0' + minutes : minutes)\n      + ':' +\n      (seconds < 10 ? '0' + seconds : seconds)\n    )\n  }\n\n  const changeTime = (cant, type) => {\n    if (type === 'break') {\n      if (btime <= 60 && cant < 0) {\n        return\n      }\n      setBTime(oper => oper + cant)\n    } else {\n      if (stime <= 60 && cant < 0) {\n        return\n      }\n      setSTime(oper => oper + cant)\n      if (!timeOn) {\n        setDTime(stime + cant)\n      }\n    }\n  }\n\n  const controlTime = () => {\n    let second = 1000\n    let date = new Date().getTime()\n    let nextDate = new Date().getTime() + second\n    let onBVariable = breakOn\n\n    if (!timeOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime()\n        if (date > nextDate) {\n          setDTime(oper => {\n            if (oper <= 0 && !onBVariable) {\n              playBSound()\n              onBVariable = true\n              setBreakOn(true)\n              return btime\n            } else if (oper <= 0 && onBVariable) {\n              playBSound()\n              onBVariable = false\n              setBreakOn(false)\n              return stime\n            }\n            return oper - 1\n          })\n          nextDate += second\n        }\n      }, 30)\n      localStorage.clear()\n      localStorage.setItem('interval-id', interval)\n    }\n\n    if (timeOn) {\n      clearInterval(localStorage.getItem('interval-id'))\n    }\n\n    setTimeOn(!timeOn)\n  }\n\n  const resetTime = () => {\n    setDTime(25 * 60)\n    setBTime(5 * 60)\n    setSTime(25 * 60)\n  }\n\n  return (\n    <DivPrincipal>\n      <h1 style={{fontSize: '60px'}}>25 + 5 Clock</h1>\n      <DivPLength>\n        <div id=\"break-label\">\n          <Length\n            lengthId='break-length'\n            increId='break-increment'\n            decreId='break-decrement'\n            tittle={'break length'}\n            changeTime={changeTime}\n            type={'break'}\n            time={btime}\n            formatTime={formatTime}\n          />\n        </div>\n        <div id=\"session-label\">\n          <Length\n            lengthId='session-length'\n            increId='session-increment'\n            decreId='session-decrement'\n            tittle={'session length'}\n            changeTime={changeTime}\n            type={'session'}\n            time={stime}\n            formatTime={formatTime}\n          />\n        </div>\n      </DivPLength>\n      <DivTime>\n        <h3 id=\"timer-label\">{breakOn ? 'Break' : 'Session'}</h3>\n        <h1 id=\"time-left\">{formatTime(dtime)}</h1>\n      </DivTime>\n      <div>\n        <ButtonPSR id=\"start_stop\" onClick={controlTime}>\n          {\n            timeOn\n              ?\n              <BiPause style={{width: '30px', height: '30px', color: 'white'}} />\n              :\n              <BiPlay style={{width: '30px', height: '30px', color: 'white'}} />\n          }\n        </ButtonPSR>\n        <ButtonPSR id=\"reset\" onClick={resetTime}>\n          <BiReset style={{width: '30px', height: '30px', color: 'white'}} />\n        </ButtonPSR>\n      </div>\n    </DivPrincipal>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}